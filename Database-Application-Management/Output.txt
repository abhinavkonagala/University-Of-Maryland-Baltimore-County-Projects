l123887dbss3002
create user hgi identified by hgi
default tablespace USER_DATA      
temporary tablespace TEMP       
quota unlimited on USER_DATA      
PROFILE DEFAULT ;
 
grant connect,resource to hgi; 

https://docs.oracle.com/cd/A97630_01/appdev.920/a96624/a_samps.htm#563
https://www.codeproject.com/Articles/580628/OracleplusPL-fSQLplusCursor


CREATE TABLE hotel(
hotel_id integer NOT NULL,
hotel_name varchar(50),
hotel_address varchar(50),
hotel_address2 varchar(30),
hotel_state varchar(2),
hotel_zip integer,
hotel_city varchar(30), 
hotel_phone varchar(12),
total_single_bedrooms integer,
total_double_bedrooms integer,
total_suite integer,
total_conference_room integer,
PRIMARY KEY (hotel_id)
);

--Create Room_types table
create table room_type(
  room_type_id integer not null,
  Type varchar(20),
  primary key (room_type_id)
);


--Create Room table
create table room(
  room_id integer not null,
  hotel_id integer,
  room_type_id integer,
  primary key (room_id),
  foreign key (hotel_id) references hotel(hotel_id),
  foreign key (room_type_id) references room_type(room_type_id)
);


--Create Customer table
create table customer(
  customer_id integer not null,
  customer_first_name varchar(20),
  customer_last_name varchar(20),
  customer_phone number,
  customer_address1 varchar(50),
  customer_address2 varchar(30),
  customer_city varchar(30),
  customer_state varchar(2),
  customer_zip number,
  Credit_card varchar(16),
  primary key (customer_id)
);

--Create Reservation table
  create table reservation(
  reservation_id integer not null,
  customer_id integer,
  hotel_id integer,
  room_id integer,
  room_type_id integer,
  check_in_date timestamp,
  check_out_date timestamp,
  reservation_date date,
  num_of_rooms integer,
  primary key (reservation_id),
  foreign key (customer_id) references customer(customer_id),
  foreign key (hotel_id) references hotel(hotel_id),
  foreign key (room_id) references room(room_id),
  foreign key (room_type_id) references room_type(room_type_id)
);



--Create Amenities table
create table Amenities(
amenities_id integer not null,
reservation_id integer,
num_meals integer,
num_laundry integer,
num_movies integer,
primary key (amenities_id),
foreign key (reservation_id) references reservation(reservation_id)
);


--Create Payment table
create table payment(
payment_id integer not null,
reservation_id integer,
pay_amount integer,
primary key (payment_id),
foreign key (reservation_id) references reservation(reservation_id)
);

 
-- insert into hotel
insert into hotel (hotel_id, hotel_name, hotel_address, hotel_address2, hotel_state, hotel_zip, hotel_city,hotel_phone, total_single_bedrooms, total_double_bedrooms, total_suite, total_conference_room) VALUES(1,'Hotel Blue',"1234 Smith Ave.",'PO Box 001','MD',21043,'Columbia','800-111-2222',25,20,27,23);
 

INSERT INTO hotel (hotel_id, hotel_name, hotel_address, hotel_address2, hotel_state, hotel_zip, hotel_city,  hotel_phone, total_single_bedrooms, total_double_bedrooms, total_suite, total_conference_room)  VALUES (2,'Hotel Brown', '5555 Washington Rd.', 'PO Box 011', 'MD' , 21042, 'Mount Hebron', '800-222-1111', 28, 27, 29, 26);

INSERT INTO hotel (hotel_id, hotel_name, hotel_address, hotel_address2, hotel_state, hotel_zip, hotel_city, hotel_phone, total_single_bedrooms, total_double_bedrooms, total_suite, total_conference_room) VALUES (3,'Hotel Purple', '1222 York Ave..', 'PO Box 221', 'MD' , 21021, 'Catonsville', '800-333-1122', 25, 28, 22, 29);

INSERT INTO hotel (hotel_id, hotel_name, hotel_address, hotel_address2, hotel_state, hotel_zip, hotel_city, hotel_phone, total_single_bedrooms, total_double_bedrooms, total_suite, total_conference_room) VALUES (4,'Hotel Green', '1632 Michigan Ave.', 'PO Box 671', 'MD' , 21089, 'Baltimore', '800-451-2452', 27, 29, 22, 29);

INSERT INTO hotel (hotel_id, hotel_name, hotel_address, hotel_address2, hotel_state, hotel_zip, hotel_city, hotel_phone, total_single_bedrooms, total_double_bedrooms, total_suite, total_conference_room) VALUES (5,'Hotel Yellow', '1234 Alpha Rd.', 'PO Box 341', 'MD', 21033, 'Sykesville', '800-131-1298', 24, 25, 27, 23);


---

INSERT INTO Customer(customer_id, customer_first_name, customer_last_name,  customer_phone, customer_address1, customer_address2, customer_city, customer_state, customer_zip, credit_card) VALUES(1,'Janet', 'Smith', 4431230921, '8045 Four Quarter Rd', 'null', 'Ellicott City', 'MD', 21043, '411111111111111');  

INSERT INTO Customer (customer_id, customer_first_name, customer_last_name, customer_phone, customer_address1,customer_address2, customer_city, customer_state, customer_zip, credit_card) VALUES(2, 'Lori', 'Don', 4431451256, '9143 Internet Ave', 'null', 'Columbia', 'MD', 21043, '4111111111111121' ); 

INSERT INTO Customer (customer_id, customer_first_name, customer_last_name, customer_phone, customer_address1,customer_address2, customer_city, customer_state, customer_zip, credit_card) VALUES (3, 'Jane', 'Doe', 443167078,'4652 Three Dome Rd', 'null', 'Sterling City', 'MD', 21043, '4111111114511111' ); 

INSERT INTO Customer (customer_id, customer_first_name, customer_last_name, customer_phone, customer_address1, customer_address2, customer_city, customer_state, customer_zip, credit_card) VALUES (4, 'Mary', 'Poppins', 4431237822', '2435 Academy Rd', 'null', 'Ellicott City', 'MD', 21041,'4111122178111111' ); 

INSERT INTO Customer (customer_id, customer_first_name, customer_last_name, customer_phone, customer_address1, customer_address2, customer_city, customer_state, customer_zip, credit_card) VALUES (5, 'Tony', 'Stark', 4433450312, '8245 Miami Rd', 'null', 'Gothem', 'MD', 21543, '1111112121111151' ); 


alter table reservation add amenities_id integer;
alter table reservation add foreign key (amenities_id) references amenities(amenities_id); 

ORA-02291: integrity constraint (HGI.SYS_C00984901) violated - parent key not
ORA-02291: integrity constraint (HGI.SYS_C00984897) violated - parent key not

 

SQL> alter table reservation disable constraint SYS_C00984891;

Table altered.

SQL> ALTER TABLE AMENITIES DISABLE CONSTRAINT SYS_C00984897;

Table altered.


INSERT INTO amenities (amenities_id, reservation_id, num_meals, num_laundry, num_movies) VALUES (10, 10000, 3, 0, 2);

--16

Create or replace procedure add_service
  ( p_ amenities_id IN amenities.amenities_id%type,
    p_ reservation_id IN amenities.reservation_id%type, 
    p_ num_meals IN amenities.num_meals%type,
    p_ num_laundry IN amenities.num_laundry%type,
    p_ num_movies IN amenities.num_movies%type
  )
As
BEGIN

INSERT INTO amenities (amenities_id, reservation_id, num_meals, num_laundry, num_movies)
VALUES (p_amenities_id, p_reservation_id, p_num_meals, p_num_laundry, p_num_movies);
COMMIT; 

EXCEPTION
When others then
Dbms_output.put_line(SQLERRM); 
End add_service; 


-- to accept user input at run time

SET SERVEROUTPUT ON; 
declare
ACCEPT p_amenities_id number PROMPT 'Enter Amenities ID '; 
ACCEPT p_reservation_id number PROMPT 'Enter reservation ID'; 
ACCEPT p_num_meals number PROMPT 'Enter no. of meals '; 
ACCEPT p_num_laundry number PROMPT 'Enter no. of laundry'; 
ACCEPT p_num_movies number PROMPT 'Enter no. of movies '; 
 
begin
 
Exec add_service(:p_amenities_id,:p_reservation_id,:p_num_meals,:p_num_laundry,:p_num_movies)
 
End;

 or

 

SQL> exec add_service(&pamenitiesID,&preser_id,&pmeals,&plaundry,&pmovies)
Enter value for pamenitiesid: 13
Enter value for preser_id: 10003
Enter value for pmeals: 4
Enter value for plaundry: 2
Enter value for pmovies: 4

PL/SQL procedure successfully completed.

SQL> select * from amenities;

AMENITIES_ID RESERVATION_ID  NUM_MEALS NUM_LAUNDRY NUM_MOVIES
------------ -------------- ---------- ----------- ----------
          11          10001          4           1          1
          12          10002          2           0          0
          13          10003          4           2          4
          10          10000          3           0          2

SQL> exec add_service(&pamenitiesID,&preser_id,&pmeals,&plaundry,&pmovies)
Enter value for pamenitiesid: 14
Enter value for preser_id: 10004
Enter value for pmeals: 4
Enter value for plaundry: 2
Enter value for pmovies: 4

PL/SQL procedure successfully completed.

SQL> select * from amenities
  2  ;

AMENITIES_ID RESERVATION_ID  NUM_MEALS NUM_LAUNDRY NUM_MOVIES
------------ -------------- ---------- ----------- ----------
          11          10001          4           1          1
          12          10002          2           0          0
          13          10003          4           2          4
          14          10004          4           2          4
          10          10000          3           0          2

--17 select_services.sql

create or replace procedure select_services 
  (p_reservation_id IN amenities.reservation_id%type )
As
        cursor c1 is select * from amenities where reservation_id=p_reservation_id; 
begin
   for x in c1 loop
         if c1%NOTFOUND THEN
             dbms_output.put_line('there are no services for this reservation');
         END IF; 
dbms_output.put_line('reservation id :  '  || x.reservation_id  ||'  | No. of movies :   ' || x.num_movies || '   | No. of laundry : ' || x.num_laundry || '  | No. of meals : ' || x.num_meals ); 
   END LOOP;

EXCEPTION
When others then
Dbms_output.put_line(SQLERRM); 

end select_services; 


SQL> @select_services.sql
 18  /

Procedure created.

SQL> show errors;
No errors.
SQL> exec select_services(&r)
Enter value for r: 10001
reservation id :  10001  | No. of movies :   1   | No. of laundry : 1  | No. of
meals : 4

PL/SQL procedure successfully completed.


SQL> exec select_services(&reservation_id)
Enter value for reservation_id: 10002
reservation id :  10002  | No. of movies :   0   | No. of laundry : 0  | No. of
meals : 2

PL/SQL procedure successfully completed.

----18

 
--selecting with amenities_id

select a.amenities_id,r.reservation_id,r.hotel_id,h.hotel_name
from amenities a,reservation r,hotel h
where a.amenities_id=&ame_id
and a.reservation_id=r.reservation_id
and r.hotel_id=h.hotel_id; 

--selecting with service (meals)

select r.hotel_id,h.hotel_name,a.amenities_id,r.reservation_id
from amenities a,reservation r,hotel h
where a.num_meals>0
and a.reservation_id=r.reservation_id
and r.hotel_id=h.hotel_id; 

select r.hotel_id,h.hotel_name,r.reservation_id,a.num_meals
from amenities a,reservation r,hotel h
where a.num_meals>0
and a.reservation_id=r.reservation_id
and r.hotel_id=h.hotel_id order by r.hotel_id;

--selecting with laundry service

select r.hotel_id,h.hotel_name,r.reservation_id,a.num_laundry
from amenities a,reservation r,hotel h
where a.num_laundry>0
and a.reservation_id=r.reservation_id
and r.hotel_id=h.hotel_id order by r.hotel_id;

--selecting with movies service

select r.hotel_id,h.hotel_name,r.reservation_id,a.num_movies
from amenities a,reservation r,hotel h
where a.num_movies>0
and a.reservation_id=r.reservation_id
and r.hotel_id=h.hotel_id order by r.hotel_id;

--

create or replace procedure services_hotel 
  (p_service  IN number )
As
 

cursor c1 is select r.hotel_id,h.hotel_name,r.reservation_id,a.num_meals 
from amenities a,reservation r,hotel h
where a.num_meals>0
and a.reservation_id=r.reservation_id
and r.hotel_id=h.hotel_id order by r.hotel_id; 
 

 
cursor c2 is select r.hotel_id,h.hotel_name,r.reservation_id,a.num_laundry 
from amenities a,reservation r,hotel h
where a.num_laundry>0
and a.reservation_id=r.reservation_id
and r.hotel_id=h.hotel_id order by r.hotel_id; 
 

 
cursor c3 is select r.hotel_id,h.hotel_name,r.reservation_id,a.num_movies 
from amenities a,reservation r,hotel h
where a.num_movies>0
and a.reservation_id=r.reservation_id
and r.hotel_id=h.hotel_id order by r.hotel_id; 
 

begin

if p_service=1 then

   for x in c1 loop
         if c1%NOTFOUND THEN
             dbms_output.put_line('there are no services for this reservation');
         END IF; 
dbms_output.put_line('hotel id: ' || x.hotel_id || ' hotel name :' || x.hotel_name || 'reservation id :  '  || x.reservation_id  ||'  | No. of meals : ' || x.num_meals ); 
   END LOOP;


elsif p_service=2 then

   for y in c2 loop
         if c2%NOTFOUND THEN
             dbms_output.put_line('there are no services for this reservation');
         END IF; 
dbms_output.put_line('hotel id: ' || y.hotel_id || ' hotel name :' || y.hotel_name || 'reservation id :  '  || y.reservation_id  ||'  | No. of laundry : ' || y.num_laundry ); 
   END LOOP;


elsif p_service=3 then

   for z in c3 loop
         if c3%NOTFOUND THEN
             dbms_output.put_line('there are no services for this reservation');
         END IF; 
dbms_output.put_line('hotel id: ' || z.hotel_id || ' hotel name :' || z.hotel_name || 'reservation id :  '  || z.reservation_id  ||'  | No. of movies :   ' || z.num_movies ); 
   END LOOP;

else

dbms_output.put_line('there is no such service');
end if; 

EXCEPTION
When others then
Dbms_output.put_line(SQLERRM); 

end services_hotel; 


set linesize 200
set serveroutput on
SQL> exec services_hotel(&p)
Enter value for p: 1
hotel id: 1 hotel name :Hotel Bluereservation id :  10000  | No. of meals : 3
hotel id: 2 hotel name :Hotel Brownreservation id :  10001  | No. of meals : 4
hotel id: 3 hotel name :Hotel Purplereservation id :  10003  | No. of meals : 4
hotel id: 3 hotel name :Hotel Purplereservation id :  10004  | No. of meals : 4
hotel id: 4 hotel name :Hotel Greenreservation id :  10002  | No. of meals : 2

PL/SQL procedure successfully completed.


==19

select r.hotel_id,h.hotel_name,r.reservation_id,a.num_meals,a.num_laundry,a.num_movies 
from amenities a,reservation r,hotel h
where h.hotel_id=&hotel
and a.reservation_id=r.reservation_id
and r.hotel_id=h.hotel_id; 



create or replace procedure ser_income_rpt 
  (p_hotel_id IN number )
As
cursor c1 is select r.hotel_id,h.hotel_name,r.reservation_id,a.num_meals,a.num_laundry,a.num_movies 
from amenities a,reservation r,hotel h
where h.hotel_id=p_hotel_id
and a.reservation_id=r.reservation_id
and r.hotel_id=h.hotel_id;
 
m_meals number :=0;
m_laundry number :=0;
m_movies number :=0;
m_meals_amt number :=0;
m_laundry_amt number :=0;
m_movies_amt number :=0;
tot_amt number :=0;
m_hotel varchar2(50);

begin
   for x in c1 loop
         if c1%NOTFOUND THEN
             dbms_output.put_line('there are no services for this reservation');
         END IF; 
dbms_output.put_line('reservation id :  '  || x.reservation_id  ||'  | No. of movies :   ' || x.num_movies || '   | No. of laundry : ' || x.num_laundry || '  | No. of meals : ' || x.num_meals ); 

m_meals:=m_meals+x.num_meals;
m_laundry:=m_laundry+x.num_laundry;
m_movies:=m_movies+x.num_movies;
m_meals_amt:=m_meals*20;
m_laundry_amt := m_laundry *10;
m_movies_amt := m_movies * 5;
tot_amt := m_meals_amt + m_laundry_amt + m_movies_amt;
m_hotel :=x.hotel_name;

   END LOOP;
 

dbms_output.put_line('Total Meals amount : ' || m_meals_amt || ' | Total Laundry Amount :' || m_laundry_amt  || ' | Total Movies amount : ' || m_movies_amt);
dbms_output.put_line('Total services amount : ' || tot_amt || ' for ' ||  m_hotel );
 


EXCEPTION
When others then
Dbms_output.put_line(SQLERRM); 

end ser_income_rpt; 

SQL> exec ser_income_rpt(1)
reservation id :  10000  | No. of movies :   2   | No. of laundry : 1  | No. of meals : 3
reservation id :  10000  | No. of movies :   2   | No. of laundry : 0  | No. of meals : 3
Total Meals amount : 120 | Total Laundry Amount :10 | Total Movies amount : 20
Total services amount : 150 for Hotel Blue

PL/SQL procedure successfully completed.



 